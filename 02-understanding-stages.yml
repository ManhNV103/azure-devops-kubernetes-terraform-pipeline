# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: FirstJob
    steps:
    - bash: echo Build First Job
    - bash: echo $(PIPELINELEVELVARIABLE)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: java -version
    - bash: node --version
    - bash: python --version
    - bash: mvn -version
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        

  # - job: SecondJob
  #   steps:
  #   - bash: echo Build Second Job

# - stage: DevDeploy
#   variables:
#     environment: Dev
#   jobs:
#   - job: DevJob
#     steps:
#     - bash: echo $(environment) deploy

# - stage: QADeploy
#   jobs:
#   - job: QAfirst
#     steps:
#     - bash: echo First QA
#   - job: QAsecond
#     steps:
#     - bash: echo Second QA

# - stage: ProdDeploy
#   jobs:
#   - job: Prod
#     steps:
#     - bash: echo Prod deploy
